import Gaffer
import GafferOSL
import GafferScene
import IECore

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 32, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"]["__uiPosition"].setValue( IECore.V2f( -30.7224236, -7.88360405 ) )
__children["Plane1"] = GafferScene.Plane( "Plane1" )
parent.addChild( __children["Plane1"] )
__children["Plane1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane1"]["__uiPosition"].setValue( IECore.V2f( -17.7373028, -7.88360405 ) )
__children["Plane2"] = GafferScene.Plane( "Plane2" )
parent.addChild( __children["Plane2"] )
__children["Plane2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane2"]["__uiPosition"].setValue( IECore.V2f( -4.74933958, -7.88360405 ) )
__children["Plane3"] = GafferScene.Plane( "Plane3" )
parent.addChild( __children["Plane3"] )
__children["Plane3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane3"]["__uiPosition"].setValue( IECore.V2f( 8.2446413, -7.88360405 ) )
__children["Plane4"] = GafferScene.Plane( "Plane4" )
parent.addChild( __children["Plane4"] )
__children["Plane4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane4"]["__uiPosition"].setValue( IECore.V2f( 21.2446404, -7.88360405 ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["__uiPosition"].setValue( IECore.V2f( -3.24506664, -17.0476875 ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"]["__uiPosition"].setValue( IECore.V2f( -3.24506664, -26.211853 ) )
__children["ShaderAssignment2"] = GafferScene.ShaderAssignment( "ShaderAssignment2" )
parent.addChild( __children["ShaderAssignment2"] )
__children["ShaderAssignment2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment2"]["__uiPosition"].setValue( IECore.V2f( -3.24506664, -35.376152 ) )
__children["ShaderAssignment3"] = GafferScene.ShaderAssignment( "ShaderAssignment3" )
parent.addChild( __children["ShaderAssignment3"] )
__children["ShaderAssignment3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment3"]["__uiPosition"].setValue( IECore.V2f( -3.24506664, -44.5403595 ) )
__children["as_diffuse_surface"] = GafferOSL.OSLShader( "as_diffuse_surface" )
parent.addChild( __children["as_diffuse_surface"] )
__children["as_diffuse_surface"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["as_diffuse_surface"]["type"].setValue( 'osl:shader' )
__children["as_diffuse_surface"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["as_diffuse_surface"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface"]["__uiPosition"].setValue( IECore.V2f( -21.6542454, -26.211853 ) )
__children["as_diffuse_surface2"] = GafferOSL.OSLShader( "as_diffuse_surface2" )
parent.addChild( __children["as_diffuse_surface2"] )
__children["as_diffuse_surface2"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["as_diffuse_surface2"]["type"].setValue( 'osl:shader' )
__children["as_diffuse_surface2"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["as_diffuse_surface2"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface2"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface2"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface2"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface2"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface2"]["__uiPosition"].setValue( IECore.V2f( -22.2987766, -35.3761444 ) )
__children["as_diffuse_surface3"] = GafferOSL.OSLShader( "as_diffuse_surface3" )
parent.addChild( __children["as_diffuse_surface3"] )
__children["as_diffuse_surface3"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["as_diffuse_surface3"]["type"].setValue( 'osl:shader' )
__children["as_diffuse_surface3"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["as_diffuse_surface3"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface3"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface3"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface3"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface3"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface3"]["__uiPosition"].setValue( IECore.V2f( -22.3061028, -44.5403595 ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"]["__uiPosition"].setValue( IECore.V2f( 13.4987154, -28.2934246 ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"]["__uiPosition"].setValue( IECore.V2f( 13.8146334, -37.4576302 ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"]["__uiPosition"].setValue( IECore.V2f( 13.7549324, -19.1298218 ) )
__children["ShaderAssignment4"] = GafferScene.ShaderAssignment( "ShaderAssignment4" )
parent.addChild( __children["ShaderAssignment4"] )
__children["ShaderAssignment4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment4"]["__uiPosition"].setValue( IECore.V2f( -3.24506664, -53.7468452 ) )
__children["as_diffuse_surface4"] = GafferOSL.OSLShader( "as_diffuse_surface4" )
parent.addChild( __children["as_diffuse_surface4"] )
__children["as_diffuse_surface4"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["as_diffuse_surface4"]["type"].setValue( 'osl:shader' )
__children["as_diffuse_surface4"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["as_diffuse_surface4"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface4"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface4"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface4"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface4"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface4"]["__uiPosition"].setValue( IECore.V2f( -22.3061028, -53.7468452 ) )
__children["PathFilter3"] = GafferScene.PathFilter( "PathFilter3" )
parent.addChild( __children["PathFilter3"] )
__children["PathFilter3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter3"]["__uiPosition"].setValue( IECore.V2f( 13.8182955, -46.6647987 ) )
__children["ShaderAssignment5"] = GafferScene.ShaderAssignment( "ShaderAssignment5" )
parent.addChild( __children["ShaderAssignment5"] )
__children["ShaderAssignment5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment5"]["__uiPosition"].setValue( IECore.V2f( -3.24506664, -63.8266525 ) )
__children["as_diffuse_surface5"] = GafferOSL.OSLShader( "as_diffuse_surface5" )
parent.addChild( __children["as_diffuse_surface5"] )
__children["as_diffuse_surface5"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["as_diffuse_surface5"]["type"].setValue( 'osl:shader' )
__children["as_diffuse_surface5"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["as_diffuse_surface5"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface5"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface5"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface5"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface5"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_diffuse_surface5"]["__uiPosition"].setValue( IECore.V2f( -22.3061028, -63.8266525 ) )
__children["PathFilter4"] = GafferScene.PathFilter( "PathFilter4" )
parent.addChild( __children["PathFilter4"] )
__children["PathFilter4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter4"]["__uiPosition"].setValue( IECore.V2f( 13.8351412, -56.744606 ) )
parent["variables"]["projectName"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
parent["variables"]["projectRootDirectory"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
Gaffer.Metadata.registerNodeValue( __children["Plane"], 'nodeGadget:color', IECore.Color3f( 0.689999998, 0.203550011, 0.203550011 ) )
Gaffer.Metadata.registerNodeValue( __children["Plane1"], 'nodeGadget:color', IECore.Color3f( 0.745000005, 0.739747941, 0.219775021 ) )
Gaffer.Metadata.registerNodeValue( __children["Plane2"], 'nodeGadget:color', IECore.Color3f( 0.22787255, 0.689999998, 0.203550011 ) )
Gaffer.Metadata.registerNodeValue( __children["Plane3"], 'nodeGadget:color', IECore.Color3f( 0.203550011, 0.471097529, 0.689999998 ) )
Gaffer.Metadata.registerNodeValue( __children["Plane4"], 'nodeGadget:color', IECore.Color3f( 0.417588025, 0.203550011, 0.689999998 ) )
__children["Group"]["in"]["in0"].setInput( __children["Plane"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Plane1"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["Plane2"]["out"] )
__children["Group"]["in"]["in3"].setInput( __children["Plane3"]["out"] )
__children["Group"]["in"]["in4"].setInput( __children["Plane4"]["out"] )
__children["ShaderAssignment"]["in"].setInput( __children["Group"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["as_diffuse_surface"]["out"]["BRDF"] )
__children["ShaderAssignment2"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["ShaderAssignment2"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderAssignment2"]["shader"].setInput( __children["as_diffuse_surface2"]["out"]["BRDF"] )
__children["ShaderAssignment3"]["in"].setInput( __children["ShaderAssignment2"]["out"] )
__children["ShaderAssignment3"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderAssignment3"]["shader"].setInput( __children["as_diffuse_surface3"]["out"]["BRDF"] )
Gaffer.Metadata.registerNodeValue( __children["PathFilter"], 'nodeGadget:color', IECore.Color3f( 0.745000005, 0.739747703, 0.219775021 ) )
Gaffer.Metadata.registerNodeValue( __children["PathFilter1"], 'nodeGadget:color', IECore.Color3f( 0.22787255, 0.689999998, 0.203550011 ) )
Gaffer.Metadata.registerNodeValue( __children["PathFilter2"], 'nodeGadget:color', IECore.Color3f( 0.689999998, 0.203550011, 0.203550011 ) )
__children["ShaderAssignment4"]["in"].setInput( __children["ShaderAssignment3"]["out"] )
__children["ShaderAssignment4"]["filter"].setInput( __children["PathFilter3"]["out"] )
__children["ShaderAssignment4"]["shader"].setInput( __children["as_diffuse_surface4"]["out"]["BRDF"] )
Gaffer.Metadata.registerNodeValue( __children["PathFilter3"], 'nodeGadget:color', IECore.Color3f( 0.203550011, 0.471097529, 0.689999998 ) )
__children["ShaderAssignment5"]["in"].setInput( __children["ShaderAssignment4"]["out"] )
__children["ShaderAssignment5"]["filter"].setInput( __children["PathFilter4"]["out"] )
__children["ShaderAssignment5"]["shader"].setInput( __children["as_diffuse_surface5"]["out"]["BRDF"] )
Gaffer.Metadata.registerNodeValue( __children["PathFilter4"], 'nodeGadget:color', IECore.Color3f( 0.417974442, 0.204240009, 0.689999998 ) )
__children["as_diffuse_surface"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["as_diffuse_surface2"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["as_diffuse_surface3"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["as_diffuse_surface4"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["as_diffuse_surface5"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )


del __children

