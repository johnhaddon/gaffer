import Gaffer
import GafferOSL
import IECore

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 32, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["frameRange"]["start"].setValue( 1002 )
parent["frameRange"]["end"].setValue( 2000 )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material1"] = GafferOSL.OSLShader( "Material1" )
parent.addChild( __children["Material1"] )
__children["Material1"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["Material1"]["type"].setValue( 'osl:shader' )
__children["Material1"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Material1"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material1"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material1"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material1"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material1"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material1"]["__uiPosition"].setValue( IECore.V2f( -7.65639591, 12.3158283 ) )
__children["DiffuseTexture"] = GafferOSL.OSLShader( "DiffuseTexture" )
parent.addChild( __children["DiffuseTexture"] )
__children["DiffuseTexture"]["name"].setValue( 'texture2d/as_color_texture' )
__children["DiffuseTexture"]["type"].setValue( 'osl:shader' )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.FloatPlug( "U", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.FloatPlug( "V", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.StringPlug( "Filename", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.StringPlug( "UDIM", defaultValue = 'off', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.StringPlug( "UDIMPrefix", defaultValue = '.tx', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.StringPlug( "UWrap", defaultValue = 'periodic', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.StringPlug( "VWrap", defaultValue = 'periodic', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.StringPlug( "Filter", defaultValue = 'smartcubic', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.FloatPlug( "UWidth", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.FloatPlug( "VWidth", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.FloatPlug( "UBlur", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.FloatPlug( "VBlur", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.IntPlug( "FirstChannel", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["parameters"].addChild( Gaffer.FloatPlug( "Fill", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["out"].addChild( Gaffer.Color3fPlug( "ColorOut", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["out"].addChild( Gaffer.FloatPlug( "AlphaOut", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DiffuseTexture"]["__uiPosition"].setValue( IECore.V2f( -233.148117, 84.0101624 ) )
__children["Material2"] = GafferOSL.OSLShader( "Material2" )
parent.addChild( __children["Material2"] )
__children["Material2"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["Material2"]["type"].setValue( 'osl:shader' )
__children["Material2"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Material2"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material2"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material2"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material2"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material2"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material2"]["__uiPosition"].setValue( IECore.V2f( -7.94487, 2.97582579 ) )
__children["Material3"] = GafferOSL.OSLShader( "Material3" )
parent.addChild( __children["Material3"] )
__children["Material3"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["Material3"]["type"].setValue( 'osl:shader' )
__children["Material3"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Material3"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material3"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material3"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material3"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material3"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material3"]["__uiPosition"].setValue( IECore.V2f( -7.94486952, -7.30589199 ) )
__children["Material4"] = GafferOSL.OSLShader( "Material4" )
parent.addChild( __children["Material4"] )
__children["Material4"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["Material4"]["type"].setValue( 'osl:shader' )
__children["Material4"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Material4"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material4"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material4"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material4"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material4"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material4"]["__uiPosition"].setValue( IECore.V2f( -7.94487, -17.0464725 ) )
__children["Material5"] = GafferOSL.OSLShader( "Material5" )
parent.addChild( __children["Material5"] )
__children["Material5"]["name"].setValue( 'surface/as_diffuse_surface' )
__children["Material5"]["type"].setValue( 'osl:shader' )
__children["Material5"]["parameters"].addChild( Gaffer.V3fPlug( "Normal", defaultValue = IECore.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Material5"]["parameters"].addChild( Gaffer.FloatPlug( "Reflectance", defaultValue = 0.800000011920929, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material5"]["parameters"].addChild( Gaffer.Color3fPlug( "Color", defaultValue = IECore.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material5"]["parameters"].addChild( Gaffer.FloatPlug( "Roughness", defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material5"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material5"]["out"].addChild( Gaffer.Plug( "BRDF", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = IECore.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Material5"]["__uiPosition"].setValue( IECore.V2f( -8.21543884, -26.787056 ) )
parent["variables"]["projectName"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
parent["variables"]["projectRootDirectory"]["name"].setFlags( Gaffer.Plug.Flags.ReadOnly, True )
__children["Material1"]["parameters"]["Color"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"] )
__children["Material1"]["parameters"]["Color"]["r"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["r"] )
__children["Material1"]["parameters"]["Color"]["g"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["g"] )
__children["Material1"]["parameters"]["Color"]["b"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["b"] )
Gaffer.Metadata.registerNodeValue( __children["DiffuseTexture"], 'bookmarked', True )
__children["Material2"]["parameters"]["Color"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"] )
__children["Material2"]["parameters"]["Color"]["r"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["r"] )
__children["Material2"]["parameters"]["Color"]["g"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["g"] )
__children["Material2"]["parameters"]["Color"]["b"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["b"] )
__children["Material3"]["parameters"]["Color"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"] )
__children["Material3"]["parameters"]["Color"]["r"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["r"] )
__children["Material3"]["parameters"]["Color"]["g"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["g"] )
__children["Material3"]["parameters"]["Color"]["b"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["b"] )
__children["Material4"]["parameters"]["Color"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"] )
__children["Material4"]["parameters"]["Color"]["r"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["r"] )
__children["Material4"]["parameters"]["Color"]["g"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["g"] )
__children["Material4"]["parameters"]["Color"]["b"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["b"] )
__children["Material5"]["parameters"]["Color"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"] )
__children["Material5"]["parameters"]["Color"]["r"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["r"] )
__children["Material5"]["parameters"]["Color"]["g"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["g"] )
__children["Material5"]["parameters"]["Color"]["b"].setInput( __children["DiffuseTexture"]["out"]["ColorOut"]["b"] )
__children["Material1"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["DiffuseTexture"].loadShader( "texture2d/as_color_texture", keepExistingValues=True )
__children["Material2"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["Material3"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["Material4"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )
__children["Material5"].loadShader( "surface/as_diffuse_surface", keepExistingValues=True )


del __children

